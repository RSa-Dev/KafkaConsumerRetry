services: 
  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 18999:8080
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafakreliableconsumer_test
  kafka-broker:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-broker
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper
    networks:
      - kafakreliableconsumer_test
  kafka-console:
    image: docker.redpanda.com/vectorized/console:master-0a8fce8
    ports:
      - "18888:8080"
    hostname: redpanda-console
    environment:
      KAFKA_BROKERS: kafka-broker:19092
    depends_on:
      - zookeeper
      - kafka-broker
    networks:
      - kafakreliableconsumer_test
  testproducer:
    build:
      dockerfile: ./TestProducer/Dockerfile
      context: ./
    environment:
      BOOTSTRAP: "kafka-broker:19092"
      CLIENTID: "test-producer"
    depends_on:
      - zookeeper
      - kafka-broker
    networks:
      - kafakreliableconsumer_test
  # consumer-one:
  #   build:
  #     dockerfile: ./TestConsumer/Dockerfile
  #     context: ./
  #   environment:
  #     BOOTSTRAP: "zookeeper:9092"
  #     CLIENT_ID: "test-producer"
  #     GROUP_ID: "test-group"
  #     START_AFTER: 10
  #     STOP_AFTER: 60
  #   depends_on:
  #     testproducer:
  #       condition: service_completed_successfully
  #   networks:
  #     - kafakreliableconsumer_test

networks:
  kafakreliableconsumer_test:
